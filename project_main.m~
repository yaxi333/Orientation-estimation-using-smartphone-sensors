% main code here
clc
clear all
close all

startup();
showIP();

%% task 2
% collect data [not necessary to send input]
[xhat, meas] = filterTemplate();

acc = meas.acc(:, ~any(isnan(meas.acc), 1) );
gyr = meas.gyr(:, ~any(isnan(meas.gyr), 1) );
mag = meas.mag(:, ~any(isnan(meas.mag), 1) );

% compute the mean and covariance
mu_acc = mean(acc, 2);
mu_gyr = mean(gyr, 2);
mu_mag = mean(mag, 2);
% acc_mu = mean(meas.acc(:, ~any(isnan(meas.acc),1)), 2);
% gyr_mu = mean(meas.gyr(:, ~any(isnan(meas.gyr),1)), 2);
% mag_mu = mean(meas.mag(:, ~any(isnan(meas.mag),1)), 2);
cov_acc = cov();
cov_gyr = cov();
cov_mag = cov();

% plot 
bins = 100;
mu_set = {mu_acc, mu_gyr, mu_mag};
cov_set = {cov_acc, cov_gyr, cov_mag};
sensor_set = ['accelator', 'gyroscope', 'magnetometer'];
axes = ['x', 'y', 'z'];

% histograms of measurements for some sensors and axes
% for-loop: 3 types of sensors
for i = 1:3
    % for-loop: 3 axes [x, y, z]
    figure;
    for j = 1:3
        subplot(3,1,j); 
        [x, y] = normpdf(mu_set{i}(j), cov_acc{i}(j), bins);
        legend([axes(j), 'axis'])
    end
    title(['measurement histograms for ', sensor_set(i), ' sensor'])

end

% signals over time  
%%%%%%%%%%%%% insert the time and axis for different %%%%%%%%%%%%%%%%%%%%%%
% sensor
figure;
% for-loop sor 3 axes: [x, y, z]
for j = 1:3 
    subplot(3,1,j); 
%     plot( , acc())
    legend([axes(j), 'axis'])
end
title('signals over time for accelerometer sensor')
figure;
for j = 1:3
    subplot(3,1,j); 
%     plot( , gyr())
    legend([axes(j), 'axis'])
end
title('signals over time for gyroscope sensor')
figure;
for j = 1:3
    subplot(3,1,j); 
%     plot( , mag())
    legend([axes(j), 'axis'])
end
title('signals over time for magnetometer sensor')

%% task 3




